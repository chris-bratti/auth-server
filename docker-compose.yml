# Example docker-compose for running this project in docker!
version: '3.3'

services:
  auth-server:
    image: auth-server:latest
    container_name: auth-server
    networks:
      - auth
    ports:
      - 3000:3000
    volumes:
      - ./certs:/app/certs
    environment:
      DATABASE_URL: postgres://${MASTER_USER}:${MASTER_PASS}@auth-postgres/${DATABASE_NAME}
      DATABASE_NAME: ${DATABASE_NAME}
      FROM_EMAIL: ${FROM_EMAIL}
      SMTP_KEY: "${SMTP_KEY}"
      DATABASE_ENCRYPTION_KEY: "${DATABASE_ENCRYPTION_KEY}"
      LOG_KEY: "${LOG_KEY}"
      REDIRECT_URL: ${REDIRECT_URL}
      REDIS_CONNECTION_STRING: "${REDIS_CONNECTION_STRING}"
      ADMIN_KEY: "${ADMIN_KEY}"
      REDIS_KEY: "${REDIS_KEY}"
      SITE_ADDR: "${SITE_ADDR}"
      APP_NAME: "${APP_NAME}"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

  redis:
    container_name: auth-redis
    image: redis:latest
    networks:
      - auth
    ports:
      - 6379:6379
    restart: unless-stopped
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  db:
    image: postgres:16
    container_name: auth-postgres
    networks:
      - auth
    restart: always
    shm_size: 128mb
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: "${MASTER_USER}"
      POSTGRES_PASSWORD: "${MASTER_PASS}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 5s

networks:
  auth: